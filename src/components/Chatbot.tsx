import React, { useState, useRef, useEffect } from 'react';
import { MessageCircle, X, Send, Bot, User } from 'lucide-react';

interface Message {
  id: string;
  text: string;
  isBot: boolean;
  timestamp: Date;
  suggestions?: string[];
}

interface ChatbotResponse {
  text: string;
  suggestions?: string[];
}

const Chatbot: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputText, setInputText] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const [conversationContext, setConversationContext] = useState<string[]>([]);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  useEffect(() => {
    if (isOpen && messages.length === 0) {
      const welcomeMessage: Message = {
        id: Date.now().toString(),
        text: "Bonjour ! üëã Je suis votre assistant virtuel Premium Assurances. Je peux vous aider avec toutes vos questions d'assurance. Que souhaitez-vous savoir ?",
        isBot: true,
        timestamp: new Date(),
        suggestions: ['Types d\'assurance', 'Obtenir un devis', 'Tarifs et prix', 'Nous contacter']
      };
      setMessages([welcomeMessage]);
    }
  }, [isOpen]);

  const getBotResponse = (userMessage: string, context: string[]): ChatbotResponse => {
    const message = userMessage.toLowerCase();
    const hasContext = (keyword: string) => context.some(ctx => ctx.includes(keyword));
    
    // Advanced greeting detection
    if (message.match(/^(bonjour|salut|hello|hi|bonsoir|hey|coucou)$/i)) {
      return {
        text: "Bonjour ! üòä Ravi de vous parler ! Je suis sp√©cialis√© dans les assurances et je connais parfaitement nos offres. Comment puis-je vous accompagner aujourd'hui ?",
        suggestions: ['Voir nos assurances', 'Comparer les prix', 'Obtenir un devis', 'Parler √† un conseiller']
      };
    }

    // Politeness responses
    if (message.match(/(merci|thank you|thanks)/i)) {
      return {
        text: "Je vous en prie ! üòä C'est un plaisir de vous aider. Avez-vous d'autres questions sur nos assurances ?",
        suggestions: ['Autres questions', 'Obtenir un devis', 'Nous contacter']
      };
    }

    // Auto/Moto insurance - Enhanced responses
    if (message.match(/(auto|voiture|moto|v√©hicule|conducteur|permis|malus|bonus|accident)/i)) {
      if (message.includes('malus') || message.includes('maluss√©')) {
        return {
          text: "üöó Pas de souci ! Nous sommes sp√©cialistes des profils maluss√©s. Nous avons des solutions adapt√©es m√™me avec un coefficient de malus √©lev√©. Nos partenaires acceptent les conducteurs avec historique difficile et nous n√©gocions les meilleurs tarifs pour vous.",
          suggestions: ['Devis maluss√©', 'Nos garanties', 'R√©duction malus', 'Parler √† un expert']
        };
      }
      if (message.includes('r√©sili√©') || message.includes('r√©siliation')) {
        return {
          text: "üöó Nous sommes experts en r√©int√©gration ! M√™me apr√®s une r√©siliation, nous trouvons des solutions. Nos partenaires sp√©cialis√©s acceptent les profils r√©sili√©s et nous vous accompagnons pour retrouver une couverture adapt√©e rapidement.",
          suggestions: ['Devis apr√®s r√©siliation', 'Conditions sp√©ciales', 'R√©int√©gration rapide', 'Nous contacter']
        };
      }
      if (message.includes('jeune') || message.includes('nouveau')) {
        return {
          text: "üöó Jeune conducteur ? Nous avons des offres sp√©ciales ! Malgr√© le surco√ªt habituel, nous n√©gocions des tarifs pr√©f√©rentiels et proposons des formules adapt√©es aux nouveaux conducteurs avec des garanties compl√®tes.",
          suggestions: ['Tarifs jeunes', 'Conduite accompagn√©e', 'Garanties adapt√©es', 'Devis personnalis√©']
        };
      }
      return {
        text: "üöó Notre assurance auto/moto couvre TOUS les profils ! Que vous soyez bon conducteur, maluss√©, r√©sili√© ou avec risques aggrav√©s, nous avons LA solution. Nos experts n√©gocient les meilleurs tarifs selon votre situation.",
        suggestions: ['Devis auto/moto', 'Profils sp√©ciaux', 'Garanties compl√®tes', 'Tarifs pr√©f√©rentiels']
      };
    }

    // Professional insurance - VTC/Taxi
    if (message.match(/(vtc|taxi|chauffeur|uber|transport|professionnel|course)/i)) {
      return {
        text: "üöï Parfait ! Nous sommes THE sp√©cialistes VTC/Taxi ! Notre assurance auto professionnelle couvre int√©gralement votre activit√© de transport de personnes. Excellent rapport qualit√©-prix, attestations conformes pr√©fecture, et gestion sinistres sp√©cialis√©e 24h/24.",
        suggestions: ['Devis VTC/Taxi', 'Attestations pr√©fecture', 'Garanties pro', 'Tarifs chauffeurs']
      };
    }

    // RC D√©cennale
    if (message.match(/(d√©cennale|decennale|btp|artisan|architecte|ma√Ætre|maitre|construction|b√¢timent|batiment)/i)) {
      return {
        text: "üèóÔ∏è RC D√©cennale obligatoire ! Nous couvrons tous les professionnels du b√¢timent : ma√Ætres d'≈ìuvre, artisans, architectes. Protection compl√®te pendant 10 ans contre tous dommages compromettant la solidit√© ou rendant impropre √† destination.",
        suggestions: ['Devis d√©cennale', 'M√©tiers couverts', 'Garanties 10 ans', 'Attestation rapide']
      };
    }

    // Fleet insurance
    if (message.match(/(flotte|parc|v√©hicules|utilitaire|commercial|engin|chantier|entreprise)/i)) {
      return {
        text: "üöõ Assurance flotte = notre sp√©cialit√© ! Un seul contrat pour tout votre parc (v√©hicules commerciaux, utilitaires, engins de chantier). Nous nous engageons sur les prix les plus comp√©titifs du march√© avec gestion centralis√©e.",
        suggestions: ['Devis flotte', 'Contrat unique', 'Prix comp√©titifs', 'Gestion centralis√©e']
      };
    }

    // RC Pro
    if (message.match(/(rc pro|responsabilit√©|civile|professionnelle|dommage|activit√©)/i)) {
      return {
        text: "üõ°Ô∏è RC Pro = protection totale ! Nous garantissons la meilleure couverture pour tous dommages (mat√©riels, immat√©riels, corporels) caus√©s dans votre activit√© professionnelle. Protection juridique incluse et expertise sp√©cialis√©e par m√©tier.",
        suggestions: ['Devis RC Pro', 'Couverture compl√®te', 'Protection juridique', 'Expertise m√©tier']
      };
    }

    // Health insurance
    if (message.match(/(sant√©|sante|mutuelle|m√©dical|medical|soins|hospitalisation|remboursement)/i)) {
      return {
        text: "‚ù§Ô∏è Sant√© = priorit√© absolue ! Notre assurance sant√© offre une couverture optimale pour vous et votre famille. Remboursements renforc√©s, tiers payant, r√©seau de soins partenaires et t√©l√©consultation incluse.",
        suggestions: ['Devis sant√©', 'Couverture famille', 'Tiers payant', 'Remboursements']
      };
    }

    // Home insurance
    if (message.match(/(habitation|logement|maison|appartement|locataire|propri√©taire)/i)) {
      return {
        text: "üè† Votre logement m√©rite la meilleure protection ! Multirisque habitation avec garanties personnalis√©es : incendie, d√©g√¢ts des eaux, vol, catastrophes naturelles. Indemnisation √† neuf et relogement garanti.",
        suggestions: ['Devis habitation', 'Garanties personnalis√©es', 'Indemnisation neuf', 'Protection compl√®te']
      };
    }

    // Business insurance
    if (message.match(/(multirisque|entreprise|commerce|local|professionnel|activit√©|business)/i)) {
      return {
        text: "üíº Multirisque Entreprise = solution globale ! Protection compl√®te de votre entreprise, locaux, mat√©riel, stocks et activit√©. Couverture perte d'exploitation, cyber-risques et responsabilit√© produits incluse.",
        suggestions: ['Devis entreprise', 'Protection globale', 'Perte exploitation', 'Cyber-risques']
      };
    }

    // Retirement/Savings
    if (message.match(/(pr√©voyance|prevoyance|retraite|√©pargne|epargne|avenir|placement)/i)) {
      return {
        text: "üìà Pr√©parez sereinement votre avenir ! Solutions √©pargne retraite et pr√©voyance personnalis√©es. Avantages fiscaux, rendements attractifs, flexibilit√© des versements et transmission patrimoine optimis√©e.",
        suggestions: ['Devis pr√©voyance', '√âpargne retraite', 'Avantages fiscaux', 'Conseil patrimoine']
      };
    }

    // Pricing questions
    if (message.match(/(prix|tarif|co√ªt|cout|cher|√©conomie|economie|comp√©titif|competitif|gratuit)/i)) {
      return {
        text: "üí∞ Nos prix ? Les plus comp√©titifs ! Nous n√©gocions avec nos partenaires pour vous garantir les meilleurs tarifs. Devis gratuit et sans engagement en 2 minutes. Comparaison transparente et conseils personnalis√©s inclus.",
        suggestions: ['Devis gratuit', 'Comparaison prix', 'Tarifs n√©goci√©s', 'Sans engagement']
      };
    }

    // Quote requests
    if (message.match(/(devis|simulation|estimation|offre|proposition)/i)) {
      return {
        text: "üìã Devis gratuit en 2 minutes ! Remplissez notre formulaire en ligne pour recevoir votre devis personnalis√© et sans engagement. Nos experts analysent votre profil et n√©gocient les meilleures conditions pour vous.",
        suggestions: ['Formulaire devis', 'Devis rapide', 'Sans engagement', 'Expert d√©di√©']
      };
    }

    // Contact information
    if (message.match(/(contact|t√©l√©phone|telephone|email|adresse|rendez-vous|rdv|conseiller)/i)) {
      return {
        text: "üìû Nos experts vous attendent !\n‚Ä¢ T√©l√©phone : +33 9 48 46 65 87\n‚Ä¢ Email : contact@premiumassurances.fr\n‚Ä¢ Adresse : 16 RUE CUVIER, 69006 LYON\n‚Ä¢ Horaires : Lundi-Vendredi 9h-18h\n‚Ä¢ Urgences : 24h/24",
        suggestions: ['Appeler maintenant', 'Envoyer email', 'Prendre RDV', 'Urgence 24h/24']
      };
    }

    // Hours/Availability
    if (message.match(/(horaire|ouvert|ferm√©|ferme|disponible|quand|heure)/i)) {
      return {
        text: "üïí Nous sommes l√† pour vous !\n‚Ä¢ Conseillers : Lundi-Vendredi 9h-18h\n‚Ä¢ Urgences sinistres : 24h/24 - 7j/7\n‚Ä¢ Devis en ligne : Disponible 24h/24\n‚Ä¢ R√©ponse garantie sous 2h en semaine",
        suggestions: ['Nous contacter', 'Urgence sinistre', 'Devis en ligne', 'Callback']
      };
    }

    // Comparison questions
    if (message.match(/(comparer|comparaison|diff√©rence|difference|mieux|avantage|pourquoi)/i)) {
      return {
        text: "üéØ Pourquoi Premium Assurances ?\n‚úÖ Tarifs n√©goci√©s les plus bas\n‚úÖ Experts sp√©cialis√©s par profil\n‚úÖ Devis gratuit en 2 minutes\n‚úÖ Accompagnement personnalis√©\n‚úÖ Service client r√©actif\n‚úÖ Partenaires de confiance",
        suggestions: ['Nos avantages', 'T√©moignages clients', 'Devis comparatif', 'Parler √† un expert']
      };
    }

    // Complaint or problem
    if (message.match(/(probl√®me|probleme|souci|difficult√©|difficulte|aide|aidez)/i)) {
      return {
        text: "üòü Je comprends votre pr√©occupation. Nos experts sont l√† pour r√©soudre tous vos probl√®mes d'assurance ! Que ce soit pour un sinistre, une r√©siliation, un malus ou toute autre difficult√©, nous trouvons LA solution adapt√©e.",
        suggestions: ['Parler √† un expert', 'Urgence sinistre', 'R√©solution rapide', 'Accompagnement']
      };
    }

    // Specific situations
    if (message.match(/(sinistre|accident|vol|incendie|d√©g√¢t|degat|urgence)/i)) {
      return {
        text: "üö® Urgence sinistre ? Nous sommes l√† 24h/24 ! Contactez imm√©diatement notre service d'urgence au +33 9 48 46 65 87. D√©claration rapide, expertise imm√©diate et accompagnement complet jusqu'√† l'indemnisation.",
        suggestions: ['Urgence 24h/24', 'D√©clarer sinistre', 'Assistance imm√©diate', 'Suivi dossier']
      };
    }

    // Default intelligent response
    const responses = [
      {
        text: "Je vois que vous vous int√©ressez √† nos services ! üòä Pouvez-vous me pr√©ciser quel type d'assurance vous recherchez ? Je suis expert dans tous nos domaines et je peux vous donner des conseils tr√®s pr√©cis.",
        suggestions: ['Assurance Auto/Moto', 'Assurance Professionnelle', 'Assurance Sant√©', 'Tous nos services']
      },
      {
        text: "Excellente question ! üëç Pour vous donner la r√©ponse la plus pr√©cise, dites-moi en plus sur votre situation. √ätes-vous particulier ou professionnel ? Quel type de protection recherchez-vous ?",
        suggestions: ['Particulier', 'Professionnel', 'Comparer les offres', 'Conseil personnalis√©']
      },
      {
        text: "Je suis l√† pour vous accompagner ! üéØ Nos sp√©cialit√©s couvrent tous vos besoins : Auto/Moto (tous profils), Professionnelle (VTC, BTP, RC Pro), Sant√©, Habitation. Que puis-je vous expliquer en d√©tail ?",
        suggestions: ['Auto tous profils', 'Assurance Pro', 'Sant√© & Habitation', 'Devis personnalis√©']
      }
    ];
    
    return responses[Math.floor(Math.random() * responses.length)];
  };

  const handleSendMessage = async () => {
    if (!inputText.trim()) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      text: inputText,
      isBot: false,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setConversationContext(prev => [...prev, inputText.toLowerCase()]);
    setInputText('');
    setIsTyping(true);

    // Simulate more realistic typing delay
    const typingDelay = Math.min(inputText.length * 50 + 1000, 3000);
    
    setTimeout(() => {
      const response = getBotResponse(inputText, conversationContext);
      const botMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: response.text,
        isBot: true,
        timestamp: new Date(),
        suggestions: response.suggestions
      };

      setMessages(prev => [...prev, botMessage]);
      setIsTyping(false);
    }, typingDelay);
  };

  const handleSuggestionClick = (suggestion: string) => {
    setInputText(suggestion);
    setTimeout(() => handleSendMessage(), 100);
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  return (
    <>
      {/* Chat Button */}
      <button
        onClick={() => setIsOpen(!isOpen)}
        className={`fixed bottom-6 right-6 z-50 p-4 rounded-full shadow-2xl transition-all duration-300 transform hover:scale-110 ${
          isOpen 
            ? 'bg-red-500 hover:bg-red-600' 
            : 'bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 hover:from-blue-700 hover:via-purple-700 hover:to-pink-700 animate-pulse'
        }`}
      >
        {isOpen ? (
          <X size={24} className="text-white" />
        ) : (
          <MessageCircle size={24} className="text-white" />
        )}
      </button>

      {/* Chat Window */}
      {isOpen && (
        <div className="fixed bottom-24 right-6 z-50 w-96 h-[600px] bg-white rounded-2xl shadow-3xl border border-gray-200 flex flex-col overflow-hidden">
          {/* Header */}
          <div className="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 text-white p-4 flex items-center">
            <Bot size={24} className="mr-3" />
            <div>
              <h3 className="font-bold">Assistant Premium Assurances</h3>
              <p className="text-sm opacity-90">Expert en assurances ‚Ä¢ En ligne</p>
            </div>
          </div>

          {/* Messages */}
          <div className="flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50">
            {messages.map((message) => (
              <div key={message.id}>
                <div className={`flex ${message.isBot ? 'justify-start' : 'justify-end'}`}>
                  <div className={`flex items-start space-x-2 max-w-[85%] ${message.isBot ? '' : 'flex-row-reverse space-x-reverse'}`}>
                    <div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${
                      message.isBot 
                        ? 'bg-gradient-to-r from-blue-500 to-purple-500' 
                        : 'bg-gray-600'
                    }`}>
                      {message.isBot ? (
                        <Bot size={16} className="text-white" />
                      ) : (
                        <User size={16} className="text-white" />
                      )}
                    </div>
                    <div className={`p-3 rounded-2xl ${
                      message.isBot 
                        ? 'bg-white border border-gray-200 text-gray-800 shadow-md' 
                        : 'bg-gradient-to-r from-blue-600 to-purple-600 text-white'
                    }`}>
                      <p className="text-sm whitespace-pre-line leading-relaxed">{message.text}</p>
                      <p className={`text-xs mt-2 ${message.isBot ? 'text-gray-500' : 'text-blue-100'}`}>
                        {message.timestamp.toLocaleTimeString('fr-FR', { 
                          hour: '2-digit', 
                          minute: '2-digit' 
                        })}
                      </p>
                    </div>
                  </div>
                </div>
                
                {/* Suggestions */}
                {message.isBot && message.suggestions && (
                  <div className="mt-3 flex flex-wrap gap-2 ml-10">
                    {message.suggestions.map((suggestion, index) => (
                      <button
                        key={index}
                        onClick={() => handleSuggestionClick(suggestion)}
                        className="px-3 py-1 bg-blue-100 hover:bg-blue-200 text-blue-700 text-xs rounded-full transition-colors border border-blue-200"
                      >
                        {suggestion}
                      </button>
                    ))}
                  </div>
                )}
              </div>
            ))}
            
            {isTyping && (
              <div className="flex justify-start">
                <div className="flex items-start space-x-2">
                  <div className="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center">
                    <Bot size={16} className="text-white" />
                  </div>
                  <div className="bg-white border border-gray-200 p-3 rounded-2xl shadow-md">
                    <div className="flex space-x-1">
                      <div className="w-2 h-2 bg-blue-400 rounded-full animate-bounce"></div>
                      <div className="w-2 h-2 bg-purple-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                      <div className="w-2 h-2 bg-pink-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                    </div>
                  </div>
                </div>
              </div>
            )}
            <div ref={messagesEndRef} />
          </div>

          {/* Input */}
          <div className="p-4 border-t border-gray-200 bg-white">
            <div className="flex space-x-2">
              <input
                type="text"
                value={inputText}
                onChange={(e) => setInputText(e.target.value)}
                onKeyPress={handleKeyPress}
                placeholder="Posez-moi vos questions sur les assurances..."
                className="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm"
                disabled={isTyping}
              />
              <button
                onClick={handleSendMessage}
                disabled={!inputText.trim() || isTyping}
                className="px-4 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
              >
                <Send size={16} />
              </button>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default Chatbot;